{"version":3,"sources":["redux/playlist-reducer.js","redux/root-reducer.js","redux/store.js","components/add-url.jsx","redux/playlist.action.js","redux/playlist.selector.js","components/player-container.jsx","components/playlist-item.jsx","components/playlist.jsx","pages/player.page.jsx","App.js","index.js"],"names":["INITIAL_STATE","urlList","currentUrl","rootReducer","combineReducers","playlist","state","action","type","length","payload","console","log","slice","middleWares","logger","store","createStore","applyMiddleware","connect","dispatch","urlCheck1","url","test","urlCheck2","className","placeholder","onBlur","event","value","target","window","alert","selectPlaylist","selectUrlList","createSelector","selectCurrentUrl","YouTube","videoId","match","pop","opts","playerVars","autoplay","onReady","playVideo","onEnd","PlaylistItem","style","minWidth","map","Player","Fragment","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b295a218.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  urlList: [],\n  currentUrl: null\n};\n\nexport const UrllistReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"ADD_URL_TO_PLAYLIST\":\n      if (!state.urlList.length) {\n        console.log(action.payload);\n\n        return {\n          urlList: [action.payload],\n          currentUrl: action.payload\n        };\n      }\n      return {\n        ...state,\n        urlList: [...state.urlList, action.payload]\n      };\n    case \"CHANGE_CURRENT_URL\":\n      return {\n        urlList: state.urlList.slice(1),\n        currentUrl: state.urlList[1]\n      };\n    default:\n      return state;\n  }\n};\n\n// export default urlListReducer;\n","import { combineReducers } from \"redux\";\n\nimport { UrllistReducer } from \"./playlist-reducer\";\n\nexport const rootReducer = combineReducers({\n  playlist: UrllistReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\n\nimport logger from \"redux-logger\";\n\nimport { rootReducer } from \"./root-reducer\";\n\nconst middleWares = [logger];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleWares));\n\nconsole.log(\"logger applied\");\n\nexport default store;\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport { addUrlToPlaylist } from \"../redux/playlist.action\";\n\nexport const AddUrl = ({ dispatch }) => {\n  //urlCheck1 for url copied from the addres bar, with http:// and without\n  const urlCheck1 = url =>\n    /http:\\/\\/www.youtube.com\\/watch\\?v=\\w/.test(url) ||\n    /www.youtube.com\\/watch\\?v=\\w/.test(url);\n  //urlCheck2 for url gotten by using sharing option in a video, with http:// and without\n  const urlCheck2 = url =>\n    /http:\\/\\/youtu.\\D\\/\\w/.test(url) || /youtu.\\D\\/\\w/.test(url);\n  return (\n    <input\n      className=\"border border-success\"\n      type=\"text\"\n      placeholder=\"enter url here\"\n      onBlur={event => {\n        const value = event.target.value;\n        event.target.value = null;\n        console.log(\"url Check :\", urlCheck1(value) || urlCheck2(value));\n        if (urlCheck1(value) || urlCheck2(value)) {\n          return dispatch(addUrlToPlaylist(value));\n        }\n        if (value != \"\") {\n          window.alert(\"enter a valid youtube url\");\n        }\n      }}\n    />\n  );\n};\n\n// const mapDispatchToProps = dispatch => ({\n//   addUrlToPlaylist: url => dispatch(addUrlToPlaylist(url))\n// });\n\nexport default connect()(AddUrl);\n","export const addUrlToPlaylist = url => ({\n  type: \"ADD_URL_TO_PLAYLIST\",\n  payload: url\n});\n\nexport const changeCurrentUrl = () => ({\n  type: \"CHANGE_CURRENT_URL\"\n  //   payload: url\n});\n","import { createSelector } from \"reselect\";\n\n//playlist contsians urlPlaylist and currentUrl\nconst selectPlaylist = state => state.playlist;\n\nexport const selectUrlList = createSelector(\n  [selectPlaylist],\n  playlist => playlist.urlList\n);\n\nexport const selectCurrentUrl = createSelector(\n  [selectPlaylist],\n  playlist => playlist.currentUrl\n);\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport { selectCurrentUrl } from \"../redux/playlist.selector\";\nimport { changeCurrentUrl } from \"../redux/playlist.action\";\n\nimport YouTube from \"react-youtube\";\n\nexport const PlayerContainer = ({ currentUrl, dispatch }) => {\n  const opts = {\n    // height: '390',\n    // width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  if (!currentUrl) {\n    return (\n      <div className=\"flex-fill text-center pt-5 border border-success\">\n        Please enter a url\n      </div>\n    );\n  }\n  return (\n    <div className=\"flex-fill\">\n      <YouTube\n        videoId={currentUrl.match(/\\?v=(\\w*)/).pop()}\n        opts={opts}\n        onReady={event => event.target.playVideo()}\n        //once the video is ended the event is triggered to change the current video in state\n        onEnd={event => {\n          console.log(event, \"finished\", event);\n          dispatch(changeCurrentUrl());\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  currentUrl: selectCurrentUrl(state)\n});\n\n// const mapDispatchToProps = dispatch => ({});\nexport default connect(mapStateToProps)(PlayerContainer);\n","import React from \"react\";\n\nexport const PlaylistItem = ({ url }) => (\n  <li className=\"list-group-item \">{url}</li>\n);\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport { selectUrlList } from \"../redux/playlist.selector\";\n\nimport { PlaylistItem } from \"./playlist-item\";\n\nexport const Playlist = ({ urlList }) => {\n  if (!urlList.length) {\n    return (\n      <div\n        className=\" align-self-stretch vh-100 text-center pt-5 border border-success\"\n        style={{ minWidth: \"100%\" }}\n      >\n        Please enter a url\n      </div>\n    );\n  }\n  return (\n    <div\n      className=\" align-self-stretch vh-100 border border-success\"\n      style={{ minWidth: \"50vw\" }}\n    >\n      <ul className=\"list-group\">\n        {urlList.map(url => (\n          <PlaylistItem url={url} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  urlList: selectUrlList(state)\n});\n\nexport default connect(mapStateToProps)(Playlist);\n","import React from \"react\";\n\nimport AddUrl from \"../components/add-url\";\n\nimport PlayerContainer from \"../components/player-container\";\n\nimport Playlist from \"../components/playlist\";\n\nexport class Player extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"d-flex\">\n          <div className=\"d-flex flex-column\">\n            <AddUrl />\n            <PlayerContainer />\n          </div>\n          <Playlist />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Player;\n","import React from \"react\";\n\nimport { Player } from \"./pages/player.page\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Player />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux/store\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}